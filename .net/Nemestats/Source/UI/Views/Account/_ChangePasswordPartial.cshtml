@model UI.Models.ChangePasswordViewModel

<h4>Update Password</h4>
<hr />
@using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    //Only display errors if the validation summary would have appeared
    if (!Html.ValidationSummary().ToHtmlString().Contains("display:none") && ViewData.ModelState["password"] != null)
    {
        <div class="validation-summary-errors">
            <ul>
                @foreach (ModelError error in ViewData.ModelState["password"].Errors)
                {
                    <li>@error.ErrorMessage</li>
                }
            </ul>
        </div>
    }
    else
    {
        @Html.ValidationSummary()
    }
    @Html.AntiForgeryToken()
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-3 control-label" })
        <div class="col-md-9">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-9 col-md-offset-3">
            <input type="submit" value="Change Password" class="btn btn-default" />
        </div>
    </div>
}