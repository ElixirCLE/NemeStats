@model UI.Models.PlayedGame.PlayedGamesViewModel

@{
    Layout = null;
}

@using UI.HtmlHelpers
@using UI.Models.Players
<div class="panel panel-primary">
    <div class="panel-heading">
        <h4>Last <span class="badge">@Model.PlayedGameDetailsViewModels.Count</span> Played Games</h4>
    </div>
    <div class="panel-body">
        @if (Model.UserCanEdit && Model.GamingGroupId.HasValue)
        {
            <div class="well">
                <div class="row">
                    <div class="col-md-6">
                        <a href="@Url.Action(MVC.PlayedGame.ActionNames.Create, MVC.PlayedGame.Name, new {})" class="btn btn-primary" id="gtm-recordplayedgamebutton-fromplayedgames">
                            <span class="fa fa-plus-circle"></span>&nbsp;Record Played Game
                        </a>
                    </div>
                    <div class="col-md-6">

                        @if (Model.ShowSearchLinkInResultsHeader)
                        {
                            <div class="pull-right">
                                <div class="btn-group btn-group-sm">
                                    @{ var fileRequestUrl = "/api/v1/GamingGroups/" + Model.GamingGroupId.Value + "/PlayedGamesExcel"; }
                                    <a href="@fileRequestUrl" id="playedGamesExcelDownload" class="btn btn-default" data-container="body" data-toggle="popover" data-placement="top"
                                       data-content="Export all of your played games to Microsoft Excel (.xlsx)">
                                        <i class="fa fa-download"></i>&nbsp;Export to excel
                                    </a>
                                    <a href="@Url.Action(MVC.PlayedGame.Search())" id="playedGamesExcelDownload" class="btn btn-default">
                                        <i class="fa fa-search"></i>&nbsp;Advanced search
                                    </a>
                                </div>
                            </div>
                        }

                    </div>


                </div>
            </div>
        }
        <div class="flip-scroll">
            <table class="table table-striped gameDefinitionsList">
                <thead>
                    <tr>
                        <th class="bgg-link-head"></th>
                        <th class="name-head">
                            Game Name
                        </th>
                        <th>
                            Date Played
                        </th>
                        <th class="result-head">
                            Result
                        </th>
                        <th class="edit-head">
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var playedGameDetailsViewModel in Model.PlayedGameDetailsViewModels)
                    {
                        <tr class="game-item">
                            <td class="bgg-link-col">
                                @if (playedGameDetailsViewModel.BoardGameGeekUri != null)
                                {

                                    if (!string.IsNullOrEmpty(playedGameDetailsViewModel.ThumbnailImageUrl))
                                    {
                                        <a href="@Url.Action(MVC.GameDefinition.ActionNames.Details,MVC.GameDefinition.Name,new {id=playedGameDetailsViewModel.GameDefinitionId})">
                                            <img class="bgg-thumbnail" src="@playedGameDetailsViewModel.ThumbnailImageUrl" alt="@playedGameDetailsViewModel.GameDefinitionName" title="@playedGameDetailsViewModel.GameDefinitionName" />
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@playedGameDetailsViewModel.BoardGameGeekUri.AbsoluteUri" target="_blank;">
                                            <img src="~/Content/Images/bgg_small.png" alt="View on BoardGameGeek.com" title="View on BoardGameGeek.com" />
                                        </a>
                                    }

                                }
                            </td>
                            <td class="name-col">
                                <b>
                                    @Html.ActionLink(playedGameDetailsViewModel.GameDefinitionName, MVC.GameDefinition.ActionNames.Details, MVC.GameDefinition.Name, new { id = playedGameDetailsViewModel.GameDefinitionId }, new { })
                                </b>
                            </td>
                            <td>
                                @playedGameDetailsViewModel.DatePlayed.ToShortDateString()
                            </td>
                            <td class="result-col">
                                @foreach (var playerGameResultDetails in playedGameDetailsViewModel.PlayerResults)
                                {
                                    @Html.Partial(MVC.PlayedGame.Views._GameResult, playerGameResultDetails)
                                }
                            </td>
                            <td>
                                <a href="@Url.Action("Details", "PlayedGame", new {id = playedGameDetailsViewModel.PlayedGameId})" title="Details">
                                    <i class="fa fa-book fa-2x"></i>
                                </a>
                                @if (playedGameDetailsViewModel.UserCanEdit)
                                {
                                    <a href="@Url.Action("Edit", "PlayedGame", new {id = playedGameDetailsViewModel.PlayedGameId})" title="Edit">
                                        <i class="fa fa-pencil fa-2x"></i>
                                    </a>
                                    <a href="@Url.Action("Delete", "PlayedGame", new {id = playedGameDetailsViewModel.PlayedGameId})" title="Delete">
                                        <i class="fa fa-trash-o fa-2x"></i>
                                    </a>
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>