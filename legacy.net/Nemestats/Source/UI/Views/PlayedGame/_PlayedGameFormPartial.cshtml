@using System.Linq
@model UI.Models.PlayedGame.PlayedGameEditViewModel

@Html.AntiForgeryToken()
<div class="form-horizontal">
    <div class="form-group">
        <input type="hidden" value="@ViewBag.GameDefinitionId" id="newGameDefinition" />
        @Html.LabelFor(model => model.GameDefinitionId, "The Game", new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.DropDownList("GameDefinitionId", Model.GameDefinitions, "Pick A Game", new
       {
           @id = "gameDefinitionDropDown",
           @class = "form-control",
           data_numOfDefinitions = Model.GameDefinitions.Count(),
           data_trigger = "focus",
           data_content = "No game definitions detected. Please create a game definition before proceeding. " +
                                                "<a href='/GameDefinition/Create?returnUrl=/PlayedGame/Create'>Create Game Definition</a>",
           data_placement = "top"
       })
            @Html.ValidationMessageFor(model => model.GameDefinitionId)
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DatePlayed, "Date Played", new { @class = "control-label col-md-3" })
        <div class="col-md-8">
            @Html.TextBox("DatePlayed", @Model.DatePlayed.Date, "{0:yyyy-MM-dd}", new { @class = "date-picker", type = "date" })
            @Html.ValidationMessageFor(model => model.DatePlayed)
        </div>
    </div>
    <div class="form-group" id="playerDiv">
        @Html.LabelFor(model => model.PlayerRanks, "The Players", new { @class = "control-label col-md-3" })
        <div class="col-md-6">
            @Html.DropDownList("Players", Model.Players, "Add A Player", new { @class = "form-control" })
            <span id="players-error" class="field-validation-error hidden">
                <span class="">Each game must have at least two players.</span>
            </span>
            <span id="players-error-rank-too-high" class="field-validation-error hidden">
                <span class="">No player can have a rank higher than the max number of players.</span>
            </span>
            @Html.ValidationMessageFor(model => model.PlayerRanks)
        </div>
        <div class="col-md-1">
            <button type="button" id="btnAddPlayer" class="btn btn-default" title="Create New Player">
                <i class="fa fa-plus"></i>
            </button>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-3">
        </div>
        <div class="col-md-9">
            <ul id="rankedPlayers" class="sortable"></ul>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Notes, "Game Notes", new {@class = "control-label col-md-3"})
        <div class="col-md-9">
            @Html.TextAreaFor(model => model.Notes, new {@style = "width:100%", @rows = "8"})
            @Html.ValidationMessageFor(model => model.Notes)
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-3"></div>
        <div class="col-md-8">
            @Html.CheckBoxFor(model => model.RecordAnotherGameAfterThis) @Html.LabelFor(model => model.RecordAnotherGameAfterThis, "Record another game after this one?")
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-3 col-md-3">
            <div class="btn-group-vertical" role="group">

                <button class="btn btn-primary btn-recordgame" id="btnCreatePlayedGameButton" title="Record a normal game with winners and losers">
                    <span class="fa fa-plus-circle fa-lg"></span> Record Game
                </button>

                <button class="btn btn-success btn-recordgame btn-everyone-won" id="btnEveryoneWonButton" title="Record a game where everyone won (e.g. you saved the world in Pandemic)">
                    <i class="fa fa-smile-o"></i> Everyone Won
                </button>
                <button class="btn btn-danger btn-recordgame" id="btnEveryoneLostButton" title="Record a game where everyone lost (e.g. no one survived in Zombicide)">
                    <i class="fa fa-frown-o"></i> Everyone Lost
                </button>


            </div>
        </div>
    </div>


</div>

<script id="player-item-template" type="text/x-handlebars-template">
    <li>
        <div class="playerItem">
            <div class="leftItem">
                <span>{{playerName}} - Rank:</span>
                <input type="hidden" name="PlayerRanks[{{playerIndex}}].PlayerId" value="{{playerId}}" />
            </div>
            <div class="rightItem fl-right">
                <input class="playerRank"
                       data-rule-required="true"
                       data-rule-min="1"
                       data-val="true"
                       data-val-number="The field must be a number."
                       data-val-required=""
                       aria-required="true"
                       aria-invalid="false"
                       type="text"
                       name="PlayerRanks[{{playerIndex}}].GameRank"
                       value="{{playerRank}}"
                       style="text-align:center;"
                       onclick="this.focus();this.select()" />

                <button class="removePlayerButton btnRemovePlayer"
                        type="button"
                        data-playername="{{playerName}}"
                        data-playerid="{{playerId}}"
                        title="Remove player">
                    <i class='fa fa-remove'></i>
                </button>
                <button class="rankButton-down"
                        type="button"
                        data-playername="{{playerName}}"
                        data-playerid="{{playerId}}"
                        title="Move rank down">
                    <i class="fa fa-chevron-down"></i>
                </button>

                <button class="rankButton-up"
                        type="button"
                        data-playername="{{playerName}}"
                        data-playerid="{{playerId}}"
                        title="Move rank up">
                    <i class="fa fa-chevron-up"></i>
                </button>
            </div>
            <div class="fl-clear"></div>
        </div>
    </li>
</script>